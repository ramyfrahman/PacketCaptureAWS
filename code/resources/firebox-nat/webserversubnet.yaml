AWSTemplateFormatVersion: "2010-09-09"
Description: "Firebox Cloud Subnets"
Parameters: 

  ParamStackName: 
    Type: String
    Description: "Name used in resource tags and names"
  ParamWebServerSubnetCidr: 
    Type: String
    Default: "10.0.2.0/24"
    Description: "CIDR block for Web Server subnet"
  ParamWebServerPort: 
    Type: String
    Default: "80"
    Description: "Traffic will be allowed in on port 80"
  #s3 cidrs open for yum updates
  params3cidr0:
    Type: String
  params3cidr1:
    Type: String
    Default: ""
  params3cidr2:
    Type: String
    Default: ""
  params3cidr3:
    Type: String
    Default: ""
  params3cidr4:
    Type: String
    Default: ""
  params3cidr5:
    Type: String
    Default: ""
  params3eastcidr0:
    Type: String
    Default: ""
  params3eastcidr1:
    Type: String
    Default: ""
  params3eastcidr2:
    Type: String
    Default: ""
  params3eastcidr3:
    Type: String
    Default: ""


Conditions:
  #make sure all the IPs exist before we attempt to create
  #rules for them. This handles some, but not all, DNS changes\
  conds3cidr0: !Not [ !Equals [ !Ref params3cidr0, ""  ] ]
  conds3cidr1: !Not [ !Equals [ !Ref params3cidr1, "" ] ]
  conds3cidr2: !Not [ !Equals [ !Ref params3cidr2, "" ] ]
  conds3cidr3: !Not [ !Equals [ !Ref params3cidr3, "" ] ]
  conds3cidr4: !Not [ !Equals [ !Ref params3cidr4, "" ] ]
  conds3cidr5: !Not [ !Equals [ !Ref params3cidr5, "" ] ]

  #not used - for future reference
  conds3eastcidr0: !Not [ !Equals [ !Ref params3eastcidr0, ""  ] ]
  conds3eastcidr1: !Not [ !Equals [ !Ref params3eastcidr1, "" ] ]
  conds3eastcidr2: !Not [ !Equals [ !Ref params3eastcidr2, "" ] ]
  conds3eastcidr3: !Not [ !Equals [ !Ref params3eastcidr3, "" ] ]

Resources:
 
  # Web Server Subnet used for eth 2
  WebServerSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !ImportValue FireboxVPC
      CidrBlock: 
        !Ref ParamWebServerSubnetCidr
      AvailabilityZone: 
        !Select 
          - 1
          - !GetAZs ""
      Tags:
      - Key: Name
        Value: WebServerSubnet
      - Key: Stack
        Value: !Ref ParamStackName

  WebServerRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      RouteTableId: !ImportValue WebServerRouteTable
      SubnetId: !Ref WebServerSubnet 

  WebServerSubnetNacl:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      Tags:
        - Key: Name
          Value: WebServerSubnetNacl
        - Key: Stack
          Value: !Ref ParamStackName
      VpcId: !ImportValue FireboxVPC
      Tags:
        - Key: Name
          Value: "Firebox Public Subnet Nacl"
        - Key: Stack
          Value: !Ref ParamStackName

  #allow traffic in on port 80 to web servers
  NaclIngress80:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties: 
      CidrBlock: "0.0.0.0/0"
      Egress: false #ingress
      NetworkAclId: !Ref WebServerSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      PortRange: #required if protocol is not -1
         From: !Ref ParamWebServerPort
         To: !Ref ParamWebServerPort
      RuleAction : "Allow" 
      #Rules are processed in order. 
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html
      RuleNumber : "1001" #using 1000 range for ingress rules
  
  NaclS3Ingress0:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties: 
      CidrBlock: !Ref params3cidr0
      Egress: false #ingress
      NetworkAclId: !Ref WebServerSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1003" #using 2000 range for egress rules

  NaclS3Ingress1:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr1
    Properties: 
      CidrBlock: !Ref params3cidr1
      Egress: false #ingress
      NetworkAclId: !Ref WebServerSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1004" #using 2000 range for egress rules

  NaclS3Ingress2:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr2
    Properties: 
      CidrBlock: !Ref params3cidr2
      Egress: false #ingress
      NetworkAclId: !Ref WebServerSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1005" #using 2000 range for egress rules

  NaclS3Ingress3:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr3
    Properties: 
      CidrBlock: !Ref params3cidr3
      Egress: false #ingress
      NetworkAclId: !Ref WebServerSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1006" #using 2000 range for egress rules

  NaclS3Ingress4:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr4
    Properties: 
      CidrBlock: !Ref params3cidr4
      Egress: false #ingress
      NetworkAclId: !Ref WebServerSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1007" #using 2000 range for egress rules

  NaclS3Ingress5:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr5
    Properties: 
      CidrBlock: !Ref params3cidr5
      Egress: false #ingress
      NetworkAclId: !Ref WebServerSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1008" #using 2000 range for egress rules
  #allow ephemeral return ports
  NaclEgressEphemeral:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties: 
      CidrBlock: "0.0.0.0/0" 
      Egress: true #egress
      NetworkAclId: !Ref WebServerSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2001" #using 2000 range for egress 

  NaclS3Egress0:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties: 
      CidrBlock: !Ref params3cidr0
      Egress: true #ingress
      NetworkAclId: !Ref WebServerSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 80
         To: 80
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2002" #using 2000 range for egress rules

  NaclS3Egress1:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr1
    Properties: 
      CidrBlock: !Ref params3cidr1
      Egress: true #ingress
      NetworkAclId: !Ref WebServerSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 80
         To: 80
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2003" #using 2000 range for egress rules

  NaclS3Egress2:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr2
    Properties: 
      CidrBlock: !Ref params3cidr2
      Egress: true #ingress
      NetworkAclId: !Ref WebServerSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 80
         To: 80
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2004" #using 2000 range for egress rules

  NaclS3Egress3:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr3
    Properties: 
      CidrBlock: !Ref params3cidr3
      Egress: true #ingress
      NetworkAclId: !Ref WebServerSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 80
         To: 80
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2005" #using 2000 range for egress rules

  NaclS3Egress4:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr4
    Properties: 
      CidrBlock: !Ref params3cidr4
      Egress: true #ingress
      NetworkAclId: !Ref WebServerSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 80
         To: 80
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2006" #using 2000 range for egress rules

  NaclS3Egress5:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr5
    Properties: 
      CidrBlock: !Ref params3cidr5
      Egress: true #ingress
      NetworkAclId: !Ref WebServerSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 80
         To: 80
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2007" #using 2000 range for egress rules

  WebServerSubnetNaclAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref WebServerSubnet
      NetworkAclId: !Ref WebServerSubnetNacl 

Outputs:
  WebServerSubnet:
    Value: !Ref WebServerSubnet
    Export:
      Name: "WebServerSubnet"