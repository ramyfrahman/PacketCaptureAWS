AWSTemplateFormatVersion: "2010-09-09"
Description: "Firebox Cloud Subnets"
Parameters: 

  ParamStackName: 
    Type: String
    Description: "Name used in resource tags and names"
  ParamManagementSubnetCidr: 
    Type: String
    Default: "10.0.1.0/24"
    Description: "CIDR block for Management subnet"
  #s3 cidrs open for yum updates
  params3cidr0:
    Type: String
  params3cidr1:
    Type: String
    Default: ""
  params3cidr2:
    Type: String
    Default: ""
  params3cidr3:
    Type: String
    Default: ""
  params3cidr4:
    Type: String
    Default: ""
  params3cidr5:
    Type: String
    Default: ""
  params3eastcidr0:
    Type: String
    Default: ""
  params3eastcidr1:
    Type: String
    Default: ""
  params3eastcidr2:
    Type: String
    Default: ""
  params3eastcidr3:
    Type: String
    Default: ""

Conditions:
  #make sure all the IPs exist before we attempt to create
  #rules for them. This handles some, but not all, DNS changes\
  conds3cidr0: !Not [ !Equals [ !Ref params3cidr0, ""  ] ]
  conds3cidr1: !Not [ !Equals [ !Ref params3cidr1, "" ] ]
  conds3cidr2: !Not [ !Equals [ !Ref params3cidr2, "" ] ]
  conds3cidr3: !Not [ !Equals [ !Ref params3cidr3, "" ] ]
  conds3cidr4: !Not [ !Equals [ !Ref params3cidr4, "" ] ]
  conds3cidr5: !Not [ !Equals [ !Ref params3cidr5, "" ] ]

  conds3eastcidr0: !Not [ !Equals [ !Ref params3eastcidr0, ""  ] ]
  conds3eastcidr1: !Not [ !Equals [ !Ref params3eastcidr1, "" ] ]
  conds3eastcidr2: !Not [ !Equals [ !Ref params3eastcidr2, "" ] ]
  conds3eastcidr3: !Not [ !Equals [ !Ref params3eastcidr3, "" ] ]

Resources:

  FireboxManagementSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !ImportValue FireboxVPC
      CidrBlock: 
        !Ref ParamManagementSubnetCidr
      AvailabilityZone: 
        !Select 
          - 1
          - !GetAZs ""
      Tags:
      - Key: Name
        Value: FireboxManagementSubnet
      - Key: Stack
        Value: !Ref ParamStackName
  
  FireboxManagementRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      RouteTableId: !ImportValue FireboxManagementRouteTable
      SubnetId: !Ref FireboxManagementSubnet

  ####
  # No Internet access in either direction
  # Because there is no route
  # Will use security groups to further restrict traffic
  # Adding an explicit NACL so changes to the default NACL
  # doesn't end up affecting this subnet
  ###
  ManagementSubnetNacl:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      Tags:
        - Key: Name
          Value: ManagementSubnetNacl
        - Key: Stack
          Value: 
            !Ref ParamStackName
      VpcId: !ImportValue FireboxVPC
  
  ManagementSubnetNaclAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref FireboxManagementSubnet
      NetworkAclId: !Ref ManagementSubnetNacl

  #Allow Admin CIDR to access Web UI 
  #http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-protocol
  #If you must - you could leave this rule out and only add it if required.
  FireboxManagementSubnetEgressNaclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties: 
      CidrBlock: 0.0.0.0/0 #should be DNS cidr only
      Egress: true #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      PortRange: #required if protocol is not -1
         From: 53
         To: 53
      RuleAction : "Allow" 
      #Rules are processed in order. 
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html
      RuleNumber : "1001" #using 1000 range for ingress rules

  NaclS3Egress0:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties: 
      CidrBlock: !Ref params3cidr0
      Egress: true #ingress
      Protocol: 6
      PortRange: 
         From: 80
         To: 443
      NetworkAclId: !Ref ManagementSubnetNacl
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1002" #using 2000 range for egress rules

  NaclS3Egress1:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr1
    Properties: 
      CidrBlock: !Ref params3cidr1
      Protocol: 6
      PortRange: 
         From: 80
         To: 443
      Egress: true #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1003" #using 2000 range for egress rules

  NaclS3Egress2:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr2
    Properties: 
      CidrBlock: !Ref params3cidr2
      Protocol: 6
      PortRange: 
         From: 80
         To: 443
      Egress: true #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1004" #using 2000 range for egress rules

  NaclS3Egress3:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr3
    Properties: 
      CidrBlock: !Ref params3cidr3
      Protocol: 6
      PortRange: 
         From: 80
         To: 443
      Egress: true #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1005" #using 2000 range for egress rules

  NaclS3Egress4:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr4
    Properties: 
      CidrBlock: !Ref params3cidr4
      Protocol: 6
      PortRange: 
         From: 80
         To: 443
      Egress: true #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1006" #using 2000 range for egress rules

  NaclS3Egress5:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr5
    Properties: 
      CidrBlock: !Ref params3cidr5
      Protocol: 6
      PortRange: 
         From: 80
         To: 443
      Egress: true #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1007" #using 2000 range for egress rules

  NaclS3Egress5:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr5
    Properties: 
      CidrBlock: !Ref params3cidr5
      Protocol: 6
      PortRange: 
         From: 80
         To: 443
      Egress: true #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1007" #using 2000 range for egress rules

  NaclS3EastEgress0:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3eastcidr0
    Properties: 
      CidrBlock: !Ref params3eastcidr0
      Protocol: 6
      PortRange: 
         From: 80
         To: 443
      Egress: true #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1008" #using 2000 range for egress rules

  NaclS3EastEgress1:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3eastcidr1
    Properties: 
      CidrBlock: !Ref params3eastcidr1
      Egress: true #ingress
      Protocol: 6
      PortRange: 
         From: 80
         To: 443
      NetworkAclId: !Ref ManagementSubnetNacl
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1009" #using 2000 range for egress rules

  NaclS3EgressEgress2:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3eastcidr2
    Properties: 
      CidrBlock: !Ref params3eastcidr2
      Protocol: 6
      PortRange: 
         From: 80
         To: 443
      Egress: true #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1010" #using 2000 range for egress rules

  NaclS3EgressEgress3:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3eastcidr3
    Properties: 
      CidrBlock: !Ref params3eastcidr3
      Protocol: 6
      PortRange: 
         From: 80
         To: 443
      Egress: true #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "1011" #using 2000 range for egress rules

  FireboxManagementSubnetIngressNaclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties: 
      CidrBlock: 0.0.0.0/0 #should be DNS cidr only
      Egress: false #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2001" #using 2000 range for egress rules

  NaclS3Ingress0:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties: 
      CidrBlock: !Ref params3cidr0
      Egress: false #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2002" #using 2000 range for egress rules

  NaclS3Ingress1:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr1
    Properties: 
      CidrBlock: !Ref params3cidr1
      Egress: false #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2003" #using 2000 range for egress rules

  NaclS3Ingress2:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr2
    Properties: 
      CidrBlock: !Ref params3cidr2
      Egress: false #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2004" #using 2000 range for egress rules

  NaclS3Ingress3:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr3
    Properties: 
      CidrBlock: !Ref params3cidr3
      Egress: false #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2005" #using 2000 range for egress rules

  NaclS3Ingress4:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr4
    Properties: 
      CidrBlock: !Ref params3cidr4
      Egress: false #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2006" #using 2000 range for egress rules

  NaclS3Ingress5:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3cidr5
    Properties: 
      CidrBlock: !Ref params3cidr5
      Egress: false #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2007" #using 2000 range for egress rules
    
  #us-west-east
  NaclS3Ingresseast0:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3eastcidr0
    Properties: 
      CidrBlock: !Ref params3eastcidr0
      Egress: false #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2008" #using 2000 range for egress rules
  
  NaclS3Ingresseast1:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3eastcidr1
    Properties: 
      CidrBlock: !Ref params3eastcidr1
      Egress: false #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2009" #using 2000 range for egress rules

  NaclS3Ingresseast2:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3eastcidr2
    Properties: 
      CidrBlock: !Ref params3eastcidr2
      Egress: false #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2010" #using 2000 range for egress rules

  NaclS3Ingresseast3:
    Type: "AWS::EC2::NetworkAclEntry"
    Condition: conds3eastcidr3
    Properties: 
      CidrBlock: !Ref params3eastcidr3
      Egress: false #ingress
      NetworkAclId: !Ref ManagementSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2011" #using 2000 range for egress rules

Outputs:
  FireboxManagementSubnet:
    Value: !Ref FireboxManagementSubnet
    Export:
      Name: "FireboxManagementSubnet"